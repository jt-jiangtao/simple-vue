{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n// slice()\r\n\r\n// 拿到数组原型上的方法（原来的方法）\r\nlet oldArrayMethods = Array.prototype;\r\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\r\n// arrayMethods.__proto__ = oldArrayMethods\r\n// Object.create 创建新对象，并使用原有的对象来提供新创建的对象的__proto__\r\nexport const arrayMethods = Object.create(oldArrayMethods);\r\n\r\nconst methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n]\r\n\r\nmethods.forEach(method => {\r\n    arrayMethods[method] = function (...args){\r\n        console.log(\"array-->\")\r\n        // this谁调用该方法this为谁\r\n        // this为Observer中的data\r\n        const result = oldArrayMethods[method].apply(this, arguments);\r\n        let inserted;\r\n        debugger\r\n        let ob = this.__ob__\r\n        switch (method) {\r\n            // 新增时可能会存在Object\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice': // vue.$set原理\r\n                args.slice(2); // arr.splice(0, 1, {a: 1})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (inserted) ob.observeArray(inserted);\r\n\r\n        return result;\r\n    }\r\n})","import {arrayMethods} from \"./array\";\r\n\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // 判断一个对象是否被观测过: 是否含有__ob__属性\r\n        Object.defineProperty(data, '__ob__',{\r\n            enumerable: false, // 不能被枚举，不能被循环出来 for...in\r\n            configurable: false, // delete\r\n            value: this,\r\n            writable: false\r\n        })\r\n\r\n        // data.__ob__ = this\r\n\r\n        // 使用defineProperty重新定义属性\r\n        if (Array.isArray(data)) {\r\n            // push shift unshift splice sort reverse pop\r\n            // 函数劫持 切片编程\r\n            data.__proto__ = arrayMethods;\r\n            // 观测数组中的对象类型\r\n            this.observeArray(data)\r\n        }else {\r\n            this.walk(data);\r\n        }\r\n    }\r\n\r\n    walk(data) {\r\n        let keys = Object.keys(data);\r\n        keys.forEach(key=>{\r\n            defineReactive(data, key, data[key]); // 将数据定义为响应式数据\r\n        })\r\n    }\r\n\r\n    observeArray(data) {\r\n        data.forEach(item => {\r\n            observe(item)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n    observe(value)\r\n    Object.defineProperty(data, key, {\r\n        get(){\r\n            console.log(\"get---> \", key)\r\n            return value\r\n        },\r\n        set(newValue){\r\n            console.log(\"set---> \", key, newValue)\r\n            if (newValue === value) return;\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // typeof null 也是object\r\n\r\n    // 不能不是对象，并且不是null\r\n    if (typeof data !== 'object' || data === null) {\r\n        return;\r\n    }\r\n    if (data.__ob__) return data;\r\n    return new Observer(data);\r\n}","import {observe} from \"./observer/index\";\r\n\r\nexport function initState(vm) {\r\n    const  opts = vm.$options;\r\n\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initProps(vm) {\r\n\r\n}\r\n\r\nfunction initMethod(vm) {}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data\r\n    vm._data = data =  typeof data == 'function' ? data.call(vm) : data;\r\n    // 数据的劫持方案 对象Object.defineProperty\r\n    // 数组 单独处理\r\n    observe(data)\r\n}\r\n\r\nfunction initComputed(vm) {}\r\n\r\nfunction initWatch(vm) {}","import {initState} from \"./state\";\r\n\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        const vm = this;\r\n        vm.$options = options;\r\n\r\n        // vue里面核心特征，响应式数据原理\r\n        // 初始化状态\r\n        initState(vm)\r\n    };\r\n}","import {initMixin} from \"./init\";\r\n\r\nfunction Vue(options) {\r\n    this._init(options); //入口方法，做初始化操作\r\n}\r\n\r\n// 写成一个个插件进行原型扩展\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","arguments","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","enumerable","configurable","value","writable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","get","set","newValue","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}